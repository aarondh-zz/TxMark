/*
 *  TxMark 1.0.0.alpha-0-g0639c8a
 *
 *  Copyright (c) 2016 Aaron G. Daisley-Harrison
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\v-adai\Documents\Visual Studio 2015\Projects\TxMark\TxMark.Antlr\MarkdownPreprocessor.g4 by ANTLR 4.5.3-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TxMark.Compiler {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MarkdownPreprocessorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMarkdownPreprocessorListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] MarkdownPreprocessorParser.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] MarkdownPreprocessorParser.DocumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] MarkdownPreprocessorParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] MarkdownPreprocessorParser.LineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.carriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCarriageReturn([NotNull] MarkdownPreprocessorParser.CarriageReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.carriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCarriageReturn([NotNull] MarkdownPreprocessorParser.CarriageReturnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.softCarriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSoftCarriageReturn([NotNull] MarkdownPreprocessorParser.SoftCarriageReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.softCarriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSoftCarriageReturn([NotNull] MarkdownPreprocessorParser.SoftCarriageReturnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.hardCarriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHardCarriageReturn([NotNull] MarkdownPreprocessorParser.HardCarriageReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.hardCarriageReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHardCarriageReturn([NotNull] MarkdownPreprocessorParser.HardCarriageReturnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] MarkdownPreprocessorParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] MarkdownPreprocessorParser.ListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.listItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListItem([NotNull] MarkdownPreprocessorParser.ListItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.listItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListItem([NotNull] MarkdownPreprocessorParser.ListItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.indentedText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndentedText([NotNull] MarkdownPreprocessorParser.IndentedTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.indentedText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndentedText([NotNull] MarkdownPreprocessorParser.IndentedTextContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.listItemIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListItemIndicator([NotNull] MarkdownPreprocessorParser.ListItemIndicatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.listItemIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListItemIndicator([NotNull] MarkdownPreprocessorParser.ListItemIndicatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockquote([NotNull] MarkdownPreprocessorParser.BlockquoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockquote([NotNull] MarkdownPreprocessorParser.BlockquoteContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquoteItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockquoteItem([NotNull] MarkdownPreprocessorParser.BlockquoteItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquoteItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockquoteItem([NotNull] MarkdownPreprocessorParser.BlockquoteItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.blockQuoteElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockQuoteElement([NotNull] MarkdownPreprocessorParser.BlockQuoteElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.blockQuoteElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockQuoteElement([NotNull] MarkdownPreprocessorParser.BlockQuoteElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.blockQuoteListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockQuoteListItem([NotNull] MarkdownPreprocessorParser.BlockQuoteListItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.blockQuoteListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockQuoteListItem([NotNull] MarkdownPreprocessorParser.BlockQuoteListItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquoteIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockquoteIndicator([NotNull] MarkdownPreprocessorParser.BlockquoteIndicatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.blockquoteIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockquoteIndicator([NotNull] MarkdownPreprocessorParser.BlockquoteIndicatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeading([NotNull] MarkdownPreprocessorParser.HeadingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeading([NotNull] MarkdownPreprocessorParser.HeadingContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.headingIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeadingIndicator([NotNull] MarkdownPreprocessorParser.HeadingIndicatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.headingIndicator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeadingIndicator([NotNull] MarkdownPreprocessorParser.HeadingIndicatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.textLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextLine([NotNull] MarkdownPreprocessorParser.TextLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.textLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextLine([NotNull] MarkdownPreprocessorParser.TextLineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.paragraph_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParagraph_end([NotNull] MarkdownPreprocessorParser.Paragraph_endContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.paragraph_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParagraph_end([NotNull] MarkdownPreprocessorParser.Paragraph_endContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] MarkdownPreprocessorParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] MarkdownPreprocessorParser.TextContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.safeText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSafeText([NotNull] MarkdownPreprocessorParser.SafeTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.safeText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSafeText([NotNull] MarkdownPreprocessorParser.SafeTextContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeContent([NotNull] MarkdownPreprocessorParser.AttributeContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeContent([NotNull] MarkdownPreprocessorParser.AttributeContentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeValue([NotNull] MarkdownPreprocessorParser.AttributeValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeValue([NotNull] MarkdownPreprocessorParser.AttributeValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeName([NotNull] MarkdownPreprocessorParser.AttributeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.attributeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeName([NotNull] MarkdownPreprocessorParser.AttributeNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] MarkdownPreprocessorParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] MarkdownPreprocessorParser.AttributeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTag([NotNull] MarkdownPreprocessorParser.TagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTag([NotNull] MarkdownPreprocessorParser.TagContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.parenthesisClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisClause([NotNull] MarkdownPreprocessorParser.ParenthesisClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.parenthesisClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisClause([NotNull] MarkdownPreprocessorParser.ParenthesisClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.openTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenTag([NotNull] MarkdownPreprocessorParser.OpenTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.openTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenTag([NotNull] MarkdownPreprocessorParser.OpenTagContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.closeTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseTag([NotNull] MarkdownPreprocessorParser.CloseTagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.closeTag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseTag([NotNull] MarkdownPreprocessorParser.CloseTagContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] MarkdownPreprocessorParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] MarkdownPreprocessorParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.whitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhitespace([NotNull] MarkdownPreprocessorParser.WhitespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.whitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhitespace([NotNull] MarkdownPreprocessorParser.WhitespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.space"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpace([NotNull] MarkdownPreprocessorParser.SpaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.space"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpace([NotNull] MarkdownPreprocessorParser.SpaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.tab"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTab([NotNull] MarkdownPreprocessorParser.TabContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.tab"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTab([NotNull] MarkdownPreprocessorParser.TabContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.anyNonWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyNonWhitespace([NotNull] MarkdownPreprocessorParser.AnyNonWhitespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.anyNonWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyNonWhitespace([NotNull] MarkdownPreprocessorParser.AnyNonWhitespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.nonWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonWhitespace([NotNull] MarkdownPreprocessorParser.NonWhitespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.nonWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonWhitespace([NotNull] MarkdownPreprocessorParser.NonWhitespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MarkdownPreprocessorParser.anyWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyWhitespace([NotNull] MarkdownPreprocessorParser.AnyWhitespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MarkdownPreprocessorParser.anyWhitespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyWhitespace([NotNull] MarkdownPreprocessorParser.AnyWhitespaceContext context);
}
} // namespace TxMark.Compiler
